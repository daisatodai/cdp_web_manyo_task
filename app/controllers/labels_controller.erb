class UsersController < ApplicationController

  def index
    @tasks = current_user.tasks.order(created_at: :desc)
    @tasks = current_user.tasks.sort_deadline_on if params[:sort_deadline_on]
    @tasks = current_user.tasks.sort_priority if params[:sort_priority]
    if params[:search]
      @tasks = current_user.tasks.order(created_at: :desc)
      @tasks = @tasks.title_like(params[:search][:title]) if params[:search][:title].present?
      @tasks = @tasks.status_is(params[:search][:status]) if params[:search][:status].present?
    end
    @tasks = @tasks.sort_by_created_at.page(params[:page]).per(10)
  end

  # GET /tasks/1 or /tasks/1.json

  # GET /tasks/new
  def new
    if params[:back]
      @label = current_user.label.build(label_params)
    else
      @label = current_user.labels.build
    end
  end

  # GET /tasks/1/edit
  def edit
  end

  # POST /tasks or /tasks.json
  def create
    @task = current_user.labels.build(label_params)
    respond_to do |format|
      if params[:back]
        render :new
      else
        if @label.save
          format.html { redirect_to labels_path(@label), notice: t('flash.labels.created') }
          format.json { render :show, status: :created, location: @label }
        else
          format.html { render :new, status: :unprocessable_entity }
          format.json { render json: @label.errors, status: :unprocessable_entity }
        end
      end
    end
  end

  # PATCH/PUT /tasks/1 or /tasks/1.json
  def update
    respond_to do |format|
      if @label.update(label_params)
        format.html { redirect_to labels_path(@label), notice: t('flash.labels.updated') }
        format.json { render :index, status: :ok, location: @label }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @task.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /tasks/1 or /tasks/1.json
  def destroy
    @label.destroy
    respond_to do |format|
      format.html { redirect_to labels_path, notice: t('flash.labels.destroyed') }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_label
      @Label = Label.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def label_params
      params.require(:label).permit(:name, task_ids: [])
    end
  end